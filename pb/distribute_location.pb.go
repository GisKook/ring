// Code generated by protoc-gen-go.
// source: distribute_location.proto
// DO NOT EDIT!

package Carrier

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LocationResult struct {
	// 附加数据  LocationExtra 序列化后的结果
	Extra     []byte `protobuf:"bytes,1,opt,name=extra,proto3" json:"extra,omitempty"`
	Longitude string `protobuf:"bytes,2,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  string `protobuf:"bytes,3,opt,name=latitude" json:"latitude,omitempty"`
	// 0 解析成功 1 解析失败
	ParseResult string `protobuf:"bytes,4,opt,name=parse_result" json:"parse_result,omitempty"`
}

func (m *LocationResult) Reset()                    { *m = LocationResult{} }
func (m *LocationResult) String() string            { return proto.CompactTextString(m) }
func (*LocationResult) ProtoMessage()               {}
func (*LocationResult) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *LocationResult) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (m *LocationResult) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *LocationResult) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *LocationResult) GetParseResult() string {
	if m != nil {
		return m.ParseResult
	}
	return ""
}

func init() {
	proto.RegisterType((*LocationResult)(nil), "Carrier.LocationResult")
}

func init() { proto.RegisterFile("distribute_location.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0xc9, 0x2c, 0x2e,
	0x29, 0xca, 0x4c, 0x2a, 0x2d, 0x49, 0x8d, 0xcf, 0xc9, 0x4f, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x77, 0x4e, 0x2c, 0x2a, 0xca, 0x4c, 0x2d, 0x52, 0x8a,
	0xe2, 0xe2, 0xf3, 0x81, 0x4a, 0x05, 0xa5, 0x16, 0x97, 0xe6, 0x94, 0x08, 0xf1, 0x72, 0xb1, 0xa6,
	0x56, 0x94, 0x14, 0x25, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x08, 0x09, 0x72, 0x71, 0xe6, 0xe4,
	0xe7, 0xa5, 0x67, 0x96, 0x94, 0xa6, 0xa4, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x0a, 0x09, 0x70,
	0x71, 0xe4, 0x24, 0x96, 0x40, 0x44, 0x98, 0xc1, 0x22, 0x22, 0x5c, 0x3c, 0x05, 0x89, 0x45, 0xc5,
	0xa9, 0xf1, 0x45, 0x60, 0x33, 0x24, 0x58, 0x40, 0xa2, 0x49, 0x6c, 0x60, 0xbb, 0x8c, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x70, 0xb3, 0x53, 0xec, 0x88, 0x00, 0x00, 0x00,
}
